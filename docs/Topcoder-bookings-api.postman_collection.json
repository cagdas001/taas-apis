{
	"info": {
		"_postman_id": "92cd67db-2636-4704-bfa7-39851407cb81",
		"name": "Topcoder-bookings-api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Jobs",
			"item": [
				{
					"name": "create job with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job with m2m create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobIdCreatedByM2M\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_m2m_create_job}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job with member success",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);",
									"postman.setEnvironmentVariable(\"jobIdCreatedByMember\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job with user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"56fdc405-eccc-4189-9e83-c78abf844f50\",\n    \"f91ae184-aba2-4485-a8cb-9336988c05ab\",\n    \"edfc7b4f-636f-44bd-96fc-949ffc58e38b\",\n    \"4ca63bb6-f515-4ab0-a6bc-c2d8531e084f\",\n    \"ee03c041-d53b-4c08-b7d9-80d7461da3e4\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"56fdc405-eccc-4189-9e83-c78abf844f50\",\n    \"f91ae184-aba2-4485-a8cb-9336988c05ab\",\n    \"edfc7b4f-636f-44bd-96fc-949ffc58e38b\",\n    \"4ca63bb6-f515-4ab0-a6bc-c2d8531e084f\",\n    \"ee03c041-d53b-4c08-b7d9-80d7461da3e4\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job with m2m read",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_job}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job with booking manager from db",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}?fromDb=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							],
							"query": [
								{
									"key": "fromDb",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get job with connect user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByMember}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByMember}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search jobs with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "21",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "1212",
									"disabled": true
								},
								{
									"key": "description",
									"value": "Dummy",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "resourceType",
									"value": "Dummy Resource Type",
									"disabled": true
								},
								{
									"key": "skill",
									"value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								},
								{
									"key": "workload",
									"value": "full-time",
									"disabled": true
								},
								{
									"key": "title",
									"value": "dummy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search jobs with with m2m all",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_all_job}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "page",
									"value": "0",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "21",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "1212",
									"disabled": true
								},
								{
									"key": "description",
									"value": "Dummy",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "resourceType",
									"value": "Dummy Resource Type",
									"disabled": true
								},
								{
									"key": "skill",
									"value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								},
								{
									"key": "workload",
									"value": "full-time",
									"disabled": true
								},
								{
									"key": "title",
									"value": "dummy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search jobs with connect user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "page",
									"value": "4",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "21",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "1212",
									"disabled": true
								},
								{
									"key": "description",
									"value": "Dummy Description",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "resourceType",
									"value": "Dummy Resource Type",
									"disabled": true
								},
								{
									"key": "skill",
									"value": "ee03c041-d53b-4c08-b7d9-80d7461da3e4",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								},
								{
									"key": "workload",
									"value": "full-time",
									"disabled": true
								},
								{
									"key": "title",
									"value": "dummy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search jobs with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "page",
									"value": "4",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "21",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "1212",
									"disabled": true
								},
								{
									"key": "description",
									"value": "Dummy Description",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "resourceType",
									"value": "Dummy Resource Type",
									"disabled": true
								},
								{
									"key": "skill",
									"value": "ee03c041-d53b-4c08-b7d9-80d7461da3e4",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								},
								{
									"key": "workload",
									"value": "fractional",
									"disabled": true
								},
								{
									"key": "title",
									"value": "dummy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search jobs with invalid token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"url": {
							"raw": "{{URL}}/jobs",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs"
							],
							"query": [
								{
									"key": "page",
									"value": "4",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "21",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "1212",
									"disabled": true
								},
								{
									"key": "description",
									"value": "Dummy Description",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "resourceType",
									"value": "Dummy Resource Type",
									"disabled": true
								},
								{
									"key": "skill",
									"value": "ee03c041-d53b-4c08-b7d9-80d7461da3e4",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								},
								{
									"key": "workload",
									"value": "full-time",
									"disabled": true
								},
								{
									"key": "title",
									"value": "dummy",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with booking manager",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with m2m update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_job}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with connect user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"cc41ddc4-cacc-4570-9bdb-1229c12b9784\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with member 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description updated\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with member success",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description updated\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByMember}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByMember}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with member with user id not exist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"cc41ddc4-cacc-4570-9bdb-1229c12b9784\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job with invalid token",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\",\n    \"cc41ddc4-cacc-4570-9bdb-1229c12b9784\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with booking manager",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with m2m update",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_job}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with connect user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with member 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description updated 2\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with member success",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description updated 2\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByMember}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByMember}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with user id not exist",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job with invalid token",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"3fa85f64-5717-4562-b3fc-2c963f66afa6\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job with booking manager",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job with m2m delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_delete_job}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job with connect user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job with member 403",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test(\"Status code is 403\", function () {",
									"    pm.response.to.have.status(403);",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job with member success",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobIdCreatedByMember}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobIdCreatedByMember}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job with invalid token",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Job Candidates",
			"item": [
				{
					"name": "create job candidate with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobCandidateId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job candidate with m2m create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobCandidateIdCreatedByM2M\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_create_job_candidate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobIdCreatedByM2M}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job candidate with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobCandidateId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job candidate with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobCandidateId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job candidate with user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"jobCandidateId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "create job candidate with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job candidate with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job candidate with m2m read",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_job_candidate}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job candidate with booking manager from db",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}?fromDb=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							],
							"query": [
								{
									"key": "fromDb",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get job candidate with connect user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get job candidate with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search job candidates with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "jobId",
									"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "a55fe1bc-1754-45fa-9adc-cf3d6d7c377a",
									"disabled": true
								},
								{
									"key": "status",
									"value": "shortlist",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "300234321",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search job candidates with m2m all",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_all_job_candidate}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "jobId",
									"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "a55fe1bc-1754-45fa-9adc-cf3d6d7c377a",
									"disabled": true
								},
								{
									"key": "status",
									"value": "shortlist",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "300234321",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search job candidates with connect user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "asc",
									"disabled": true
								},
								{
									"key": "jobId",
									"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "a55fe1bc-1754-45fa-9adc-cf3d6d7c377a",
									"disabled": true
								},
								{
									"key": "status",
									"value": "shortlist",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "300234321",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search job candidates with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates?sortBy=id&sortOrder=asc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id"
								},
								{
									"key": "sortOrder",
									"value": "asc"
								},
								{
									"key": "jobId",
									"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "a55fe1bc-1754-45fa-9adc-cf3d6d7c377a",
									"disabled": true
								},
								{
									"key": "status",
									"value": "shortlist",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "300234321",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search job candidates with invalid token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates?sortBy=id&sortOrder=asc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "1",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id"
								},
								{
									"key": "sortOrder",
									"value": "asc"
								},
								{
									"key": "jobId",
									"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
									"disabled": true
								},
								{
									"key": "userId",
									"value": "a55fe1bc-1754-45fa-9adc-cf3d6d7c377a",
									"disabled": true
								},
								{
									"key": "status",
									"value": "shortlist",
									"disabled": true
								},
								{
									"key": "externalId",
									"value": "300234321",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "put job candidate with booking manager",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"status\": \"selected\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job candidate with m2m update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_job_candidate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobIdCreatedByM2M}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"status\": \"selected\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job candidate with connect user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"status\": \"selected\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job candidate with member",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"status\": \"selected\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job candidate with user id not exist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"status\": \"selected\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put job candidate with invalid token",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\n  \"status\": \"selected\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job candidate with booking manager",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shortlist\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job candidate with m2m update",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_job_candidate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shortlist\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job candidate with connect user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shortlist\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job candidate with member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shortlist\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job candidate with user id not exist",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shortlist\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch job candidate with invalid token",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"status\": \"shortlist\",\n  \"externalId\": \"300234321\",\n  \"resume\": \"http://example.com\"\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job candidate with member",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job candidate with connect user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job candidate with booking manager",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete job candidate with m2m delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_delete_job_candidate}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Interviews",
			"item": [
				{
					"name": "Before Test",
					"item": [
						{
							"name": "create job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200)\r",
											"    if(pm.response.status === \"OK\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"jobId\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_bookingManager}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"88774632\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job candidate",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200)\r",
											"    if(pm.response.status === \"OK\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"jobCandidateId\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"jobId\": \"{{jobId}}\",\n  \"userId\": \"95e7970f-12b4-43b7-ab35-38c34bf033c7\",\n  \"externalId\": \"88774631\",\n  \"resume\": \"http://example.com\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Request interview",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.environment.set(\"interviewRound\", response.round);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"googleCalendarId\": \"dummyId\",\r\n    \"customMessage\": \"This is a custom message\",\r\n    \"status\": \"Requested\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview for the same jobCandidateId - should increment round",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        const lastRound = pm.environment.get(\"interviewRound\")\r",
									"        pm.expect(response.round).to.eq(lastRound + 1)\r",
									"        pm.environment.set(\"interviewRound\", response.round);\r",
									"    }\r",
									"});\r",
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.environment.set(\"interviewRound\", response.round);\r",
									"        pm.expect(response.status).to.eq(\"Requested\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"googleCalendarId\": \"dummyId\",\r\n    \"customMessage\": \"This is a custom message\",\r\n    \"status\": \"Requested\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview without status - should take default status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.environment.set(\"interviewRound\", response.round);\r",
									"        pm.expect(response.status).to.eq(\"Requested\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview with invalid status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"interview.status\\\" must be [Requested]\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"status\": \"xxxx\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview with round - should not accept",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"interview.round\\\" is not allowed\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"round\": 1\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview without xaiTemplate - should fail",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"interview.xaiTemplate\\\" is required\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"status\": \"Requested\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview with non-existing jobCandidate",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 404', function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"The job candidate with id=9105f597-f9d5-49c0-9cbf-9a0cbda47260 doesn't exist.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/9105f597-f9d5-49c0-9cbf-9a0cbda47260/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"9105f597-f9d5-49c0-9cbf-9a0cbda47260",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview with non-existing userId in token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"Bad Request\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_userId_not_exist}}",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"No token provided.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Request interview with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/requestInterview",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"requestInterview"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview by round",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/{{interviewRound}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"{{interviewRound}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview fromDb by round",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/{{interviewRound}}?fromDb=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"{{interviewRound}}"
							],
							"query": [
								{
									"key": "fromDb",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview by negative round",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"round\\\" must be a positive number\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/-1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"-1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview by round=0",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"round\\\" must be a positive number\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/0",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"0"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview by non-existing round",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 404', function () {\r",
									"    pm.response.to.have.status(404);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"Interview doesn't exist with round: 999\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/999",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"999"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview by round without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"No token provided.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get interview by round with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews/1",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews",
								"1"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "createdAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "updatedAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "status",
									"value": "Requested",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews by invalid status",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"criteria.status\\\" must be [Requested]\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews?status=xxx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "createdAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "updatedAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "status",
									"value": "xxx"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews by invalid createdAt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"criteria.createdAt\\\" must be a valid date\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews?createdAt=xxxx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "createdAt",
									"value": "xxxx"
								},
								{
									"key": "updatedAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "status",
									"value": "Requested",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews by invalid updatedAt",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"criteria.updatedAt\\\" must be a valid date\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews?updatedAt=xxx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "createdAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "updatedAt",
									"value": "xxx"
								},
								{
									"key": "status",
									"value": "Requested",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews by invalid sortOrder",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"criteria.sortOrder\\\" must be one of [desc, asc]\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews?sortOrder=xxx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "createdAt",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "xxx"
								},
								{
									"key": "createdAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "updatedAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "status",
									"value": "Requested",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews by invalid sortBy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"\\\"criteria.sortBy\\\" must be one of [round, createdAt, updatedAt]\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews?sortBy=xxx",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							],
							"query": [
								{
									"key": "sortBy",
									"value": "xxx"
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "createdAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "updatedAt",
									"value": "2021-04-13T20:28:37.954Z",
									"disabled": true
								},
								{
									"key": "status",
									"value": "Requested",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews without token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"No token provided.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							]
						}
					},
					"response": []
				},
				{
					"name": "Search interviews with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer invalid_token",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/jobCandidates/{{jobCandidateId}}/interviews",
							"host": [
								"{{URL}}"
							],
							"path": [
								"jobCandidates",
								"{{jobCandidateId}}",
								"interviews"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Resource Bookings",
			"item": [
				{
					"name": "create resource booking with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"resourceBookingId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create resource booking with m2m create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"resourceBookingIdCreatedByM2M\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_create_resource_booking}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobIdCreatedByM2M}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create resource booking with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"var data = JSON.parse(responseBody);\r",
									"postman.setEnvironmentVariable(\"resourceBookingId\",data.id);"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create resource booking with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create resource booking with user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "create resource booking with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									""
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							]
						}
					},
					"response": []
				},
				{
					"name": "get resource booking with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get resource booking with m2m read",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_resource_booking}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get resource booking with booking manager from db",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}?fromDb=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							],
							"query": [
								{
									"key": "fromDb",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get resource booking with connect user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get resource booking with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search resource bookings with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								},
								{
									"key": "projectIds",
									"value": "111, 16705",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search resource bookings with m2m all",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_all_resource_booking}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "status",
									"value": "sourcing",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search resource bookings with connect user",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings?sortOrder=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							],
							"query": [
								{
									"key": "page",
									"value": "4",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search resource bookings with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings?sortOrder=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							],
							"query": [
								{
									"key": "page",
									"value": "4",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search resource bookings with invalid token",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"url": {
							"raw": "{{URL}}/resourceBookings?sortOrder=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings"
							],
							"query": [
								{
									"key": "page",
									"value": "4",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "3",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2020-09-27T04:17:23.131Z",
									"disabled": true
								},
								{
									"key": "rateType",
									"value": "hourly",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "put resource booking with booking manager",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put resource booking with m2m update",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_resource_booking}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobIdCreatedByM2M}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put resource booking with connect user",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put resource booking with member",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put resource booking with user id not exist",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put resource booking with invalid token",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch resource booking with booking manager",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch resource booking with m2m update",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_resource_booking}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch resource booking with connect user",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch resource booking with member",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch resource booking with user id not exist",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch resource booking with invalid token",
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete resource booking with member",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete resource booking with connect user",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete resource booking with booking manager",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete resource booking with m2m delete",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_delete_resource_booking}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete resource booking with invalid token",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/resourceBookings/{{resourceBookingId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"resourceBookings",
								"{{resourceBookingId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Work Periods",
			"item": [
				{
					"name": "Before Test",
					"item": [
						{
							"name": "create job",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    if(pm.response.status === \"OK\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"jobId\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"value": "Bearer {{token_bookingManager}}",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "create resource booking",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test('Status code is 200', function () {\r",
											"    pm.response.to.have.status(200);\r",
											"    if(pm.response.status === \"OK\"){\r",
											"        const response = pm.response.json()\r",
											"        pm.environment.set(\"resourceBookingId\", response.id);\r",
											"    }\r",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{jobId}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "create work period with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.environment.set(\"workPeriodId\", response.id);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with m2m create",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"    if(pm.response.status === \"OK\"){\r",
									"        const response = pm.response.json()\r",
									"        pm.environment.set(\"workPeriodIdCreatedByM2M\", response.id);\r",
									"    }\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_create_work_period}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-14\",\r\n    \"endDate\": \"2021-03-20\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Bad Request\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with missing parameter 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.resourceBookingId\\\" is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with missing parameter 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.endDate\\\" is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with missing parameter 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.paymentStatus\\\" is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.resourceBookingId\\\" must be a valid GUID\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"aaa-aaa\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.startDate\\\" must be in YYYY-MM-DD format\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"07-03-2021\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"startDate should be always Sunday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-06\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"endDate should be always the next Saturday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-14\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.daysWorked\\\" must be a number\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": \"aa\",\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(`Key (resource_booking_id, start_date, end_date)=(${pm.environment.get('resourceBookingId')}, 2021-03-07, 2021-03-13) already exists.`)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "create work period with invalid parameter 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"workPeriod.paymentStatus\\\" must be one of [pending, partially-completed, completed, cancelled]\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"paid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							]
						}
					},
					"response": []
				},
				{
					"name": "get work period with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get work period with m2m read",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_work_period}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get work period with booking manager from db",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}?fromDb=true",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							],
							"query": [
								{
									"key": "fromDb",
									"value": "true"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "get work period with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "get work period with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "search work periods with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "resourceBookingId",
									"value": "{{resourceBookingId}}",
									"disabled": true
								},
								{
									"key": "resourceBookingIds",
									"value": "{{resourceBookingId}},{{resourceBookingIdCreatedByM2M}}",
									"disabled": true
								},
								{
									"key": "paymentStatus",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-03-14",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2021-03-20",
									"disabled": true
								},
								{
									"key": "userHandle",
									"value": "pshah_manager",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "16843",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search work periods with m2m all",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_all_work_period}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "resourceBookingId",
									"value": "{{resourceBookingId}}",
									"disabled": true
								},
								{
									"key": "resourceBookingIds",
									"value": "{{resourceBookingId}},{{resourceBookingIdCreatedByM2M}}",
									"disabled": true
								},
								{
									"key": "paymentStatus",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-03-14",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2021-03-20",
									"disabled": true
								},
								{
									"key": "userHandle",
									"value": "pshah_manager",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "16843",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search work periods with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "resourceBookingId",
									"value": "{{resourceBookingId}}",
									"disabled": true
								},
								{
									"key": "resourceBookingIds",
									"value": "{{resourceBookingId}},{{resourceBookingIdCreatedByM2M}}",
									"disabled": true
								},
								{
									"key": "paymentStatus",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-03-14",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2021-03-20",
									"disabled": true
								},
								{
									"key": "userHandle",
									"value": "pshah_manager",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "16843",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search work periods with member",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "resourceBookingId",
									"value": "{{resourceBookingId}}",
									"disabled": true
								},
								{
									"key": "resourceBookingIds",
									"value": "{{resourceBookingId}},{{resourceBookingIdCreatedByM2M}}",
									"disabled": true
								},
								{
									"key": "paymentStatus",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-03-14",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2021-03-20",
									"disabled": true
								},
								{
									"key": "userHandle",
									"value": "pshah_manager",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "16843",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "search work periods with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"url": {
							"raw": "{{URL}}/workPeriods",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods"
							],
							"query": [
								{
									"key": "page",
									"value": "1",
									"disabled": true
								},
								{
									"key": "perPage",
									"value": "5",
									"disabled": true
								},
								{
									"key": "sortBy",
									"value": "id",
									"disabled": true
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"disabled": true
								},
								{
									"key": "resourceBookingId",
									"value": "{{resourceBookingId}}",
									"disabled": true
								},
								{
									"key": "resourceBookingIds",
									"value": "{{resourceBookingId}},{{resourceBookingIdCreatedByM2M}}",
									"disabled": true
								},
								{
									"key": "paymentStatus",
									"value": "pending",
									"disabled": true
								},
								{
									"key": "startDate",
									"value": "2021-03-14",
									"disabled": true
								},
								{
									"key": "endDate",
									"value": "2021-03-20",
									"disabled": true
								},
								{
									"key": "userHandle",
									"value": "pshah_manager",
									"disabled": true
								},
								{
									"key": "projectId",
									"value": "111",
									"disabled": true
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with m2m update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_work_period}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-14\",\r\n    \"endDate\": \"2021-03-20\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Bad Request\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with missing parameter 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.resourceBookingId\\\" is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with missing parameter 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.endDate\\\" is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with missing parameter 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.paymentStatus\\\" is required\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.resourceBookingId\\\" must be a valid GUID\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"aaa-aaa\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.startDate\\\" must be in YYYY-MM-DD format\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"07-03-2021\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"startDate should be always Sunday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-06\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"endDate should be always the next Saturday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-14\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.daysWorked\\\" must be a number\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": \"aa\",\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(`Key (resource_booking_id, start_date, end_date)=(${pm.environment.get('resourceBookingId')}, 2021-03-14, 2021-03-20) already exists.`)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-14\",\r\n    \"endDate\": \"2021-03-20\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "put work period with invalid parameter 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.paymentStatus\\\" must be one of [pending, partially-completed, completed, cancelled]\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"paid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with m2m update",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 200', function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_update_work_period}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-14\",\r\n    \"endDate\": \"2021-03-20\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with user id not exist",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Bad Request\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_userId_not_exist}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-21\",\r\n    \"endDate\": \"2021-03-27\",\r\n    \"daysWorked\": 3,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"cancelled\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 1",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.resourceBookingId\\\" must be a valid GUID\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"aaa-aaa\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 2",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.startDate\\\" must be in YYYY-MM-DD format\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"07-03-2021\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 3",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"startDate should be always Sunday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-06\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 4",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"endDate should be always the next Saturday\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-14\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 5",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.daysWorked\\\" must be a number\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": \"aa\",\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 6",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(`Key (resource_booking_id, start_date, end_date)=(${pm.environment.get('resourceBookingId')}, 2021-03-14, 2021-03-20) already exists.`)\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-14\",\r\n    \"endDate\": \"2021-03-20\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "patch work period with invalid parameter 7",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 400', function () {\r",
									"    pm.response.to.have.status(400);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"\\\"data.paymentStatus\\\" must be one of [pending, partially-completed, completed, cancelled]\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "PATCH",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\r\n    \"resourceBookingId\": \"{{resourceBookingId}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"paid\"\r\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete work period with member",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete work period with connect user",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 403', function () {\r",
									"    pm.response.to.have.status(403);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_connectUser}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete work period with booking manager",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 204', function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete work period with m2m delete",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 204', function () {\r",
									"    pm.response.to.have.status(204);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_delete_work_period}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodIdCreatedByM2M}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodIdCreatedByM2M}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete work period with invalid token",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 401', function () {\r",
									"    pm.response.to.have.status(401);\r",
									"    const response = pm.response.json()\r",
									"    pm.expect(response.message).to.eq(\"Invalid Token.\")\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer invalid_token"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "delete work period not found",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"pm.test('Status code is 404', function () {\r",
									"    pm.response.to.have.status(404);\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/workPeriods/{{workPeriodId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"workPeriods",
								"{{workPeriodId}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Taas Teams",
			"item": [
				{
					"name": "GET /taas-teams",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams?perPage=10&page=1&name=*taas*&sortBy=lastActivityAt&sortOrder=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams"
							],
							"query": [
								{
									"key": "perPage",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "name",
									"value": "*taas*",
									"description": "case-insensitive; support wildcard match"
								},
								{
									"key": "sortBy",
									"value": "lastActivityAt",
									"description": "allows: createdAt, updatedAt, lastActivityAt, id, status, name, type, best match"
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"description": "allows: asc, desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams?perPage=10&page=1&name=*taas*&sortBy=lastActivityAt&sortOrder=desc",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams"
							],
							"query": [
								{
									"key": "perPage",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "name",
									"value": "*taas*",
									"description": "case-insensitive; support wildcard match"
								},
								{
									"key": "sortBy",
									"value": "lastActivityAt",
									"description": "allows: createdAt, updatedAt, lastActivityAt, id, status, name, type, best match"
								},
								{
									"key": "sortOrder",
									"value": "desc",
									"description": "allows: asc, desc"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams with m2m read",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_taas_team}}"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/{{projectId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/:projectId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								":projectId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "16705"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id with m2m read",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_taas_team}}"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/{{projectId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"{{projectId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id/jobs/:jobId",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/{{projectId}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"{{projectId}}",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id/jobs/:jobId with booking manager",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_bookingManager}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/:projectId/jobs/:jobId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								":projectId",
								"jobs",
								":jobId"
							],
							"variable": [
								{
									"key": "projectId",
									"value": "16705"
								},
								{
									"key": "jobId",
									"value": "948a25a6-086f-4a96-aad5-9ccd2d3e87b2"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id/jobs/:jobId with m2m read",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_m2m_read_taas_team}}"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/{{projectId}}/jobs/{{jobId}}",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"{{projectId}}",
								"jobs",
								"{{jobId}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/skills",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_member}}",
								"type": "text"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/skills?perPage=10&page=1&orderBy=name",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"skills"
							],
							"query": [
								{
									"key": "perPage",
									"value": "10"
								},
								{
									"key": "page",
									"value": "1"
								},
								{
									"key": "orderBy",
									"value": "name",
									"description": "possible values are defined by /v5/skills"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /taas-teams/email - team-issue-report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"value": "Bearer {{token_member}}",
								"type": "text"
							},
							{
								"key": "Content-Type",
								"value": "application/json",
								"type": "text"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"template\": \"team-issue-report\",\n   \"data\": {\n      \"projectName\": \"TaaS Project Name\",\n      \"projectId\": 12345,\n      \"reportText\": \"I have issue with ...\"\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/taas-teams/email",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /taas-teams/email - member-issue-report",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"template\": \"member-issue-report\",\n   \"data\": {\n      \"projectName\": \"TaaS Project Name\",\n      \"projectId\": 12345,\n      \"userHandle\": \"pshah_manager\",\n      \"reportText\": \"I have issue with ...\"\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/taas-teams/email",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /taas-teams/email - extension-request",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"template\": \"extension-request\",\n   \"data\": {\n      \"projectName\": \"TaaS Project Name\",\n      \"projectId\": 12345,\n      \"userHandle\": \"pshah_manager\",\n      \"reportText\": \"I would like to keep working with this member for 2 months...\"\n   }\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/taas-teams/email",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"email"
							]
						}
					},
					"response": []
				},
				{
					"name": "POST /taas-teams/:id/members",
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_administrator}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n    \"handles\": [\n        \"tester1234\",\n        \"non-existing\"\n    ],\n    \"emails\": [\n        \"non-existing@domain.com\",\n        \"email@domain.com\"\n    ]\n}",
							"options": {
								"raw": {
									"language": "json"
								}
							}
						},
						"url": {
							"raw": "{{URL}}/taas-teams/:id/members",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								":id",
								"members"
							],
							"variable": [
								{
									"key": "id",
									"value": "16705"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id/members",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/:id/members?role=customer&fields=id,userId,role,createdAt,updatedAt,createdBy,updatedBy,handle,photoURL,workingHourStart,workingHourEnd,timeZone,email",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								":id",
								"members"
							],
							"query": [
								{
									"key": "role",
									"value": "customer"
								},
								{
									"key": "fields",
									"value": "id,userId,role,createdAt,updatedAt,createdBy,updatedBy,handle,photoURL,workingHourStart,workingHourEnd,timeZone,email"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "16705"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/:id/invites",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/:id/invites?fields=createdAt,deletedAt,role,updatedBy,createdBy,id,projectId,userId,email,deletedBy,updatedAt,status",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								":id",
								"invites"
							],
							"query": [
								{
									"key": "fields",
									"value": "createdAt,deletedAt,role,updatedBy,createdBy,id,projectId,userId,email,deletedBy,updatedAt,status"
								}
							],
							"variable": [
								{
									"key": "id",
									"value": "16705"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "DELETE /taas-teams/:id/members/:projectMemberId",
					"request": {
						"method": "DELETE",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_bookingManager}}"
							},
							{
								"key": "Content-Type",
								"type": "text",
								"value": "application/json"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/:id/members/:projectMemberId",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								":id",
								"members",
								":projectMemberId"
							],
							"variable": [
								{
									"key": "id",
									"value": "16705"
								},
								{
									"key": "projectMemberId",
									"value": "14327"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "GET /taas-teams/me",
					"request": {
						"method": "GET",
						"header": [
							{
								"key": "Authorization",
								"type": "text",
								"value": "Bearer {{token_member}}"
							}
						],
						"url": {
							"raw": "{{URL}}/taas-teams/me",
							"host": [
								"{{URL}}"
							],
							"path": [
								"taas-teams",
								"me"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "health check",
			"item": [
				{
					"name": "health check",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{URL}}/health",
							"host": [
								"{{URL}}"
							],
							"path": [
								"health"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "Create Demo Data For Team",
			"item": [
				{
					"name": "Get Users",
					"item": [
						{
							"name": "Get Users",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);",
											"",
											"pm.test(\"Status code is 200\", function () {",
											"    pm.response.to.have.status(200);",
											"});",
											"",
											"var demoUsers = 20;",
											"",
											"pm.test('We need to have at least ' + demoUsers + ' demo userIds. Define them in {{demoUserIdN}} variables.', function () {",
											"    for (var i = 0; i < demoUsers; i++) {",
											"        var variableName = \"demoUserId\" + (i + 1);",
											"        var existentValue = pm.variables.get(variableName);",
											"        var user = data[i];",
											"",
											"        pm.expect(!!user || !!existentValue).to.be.true;",
											"",
											"        postman.setEnvironmentVariable(variableName, user.id);",
											"    }",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"auth": {
									"type": "bearer",
									"bearer": [
										{
											"key": "token",
											"value": "{{token_bookingManager}}",
											"type": "string"
										}
									]
								},
								"method": "GET",
								"header": [],
								"url": {
									"raw": "https://api.topcoder-dev.com/v5/users?perPage=20",
									"protocol": "https",
									"host": [
										"api",
										"topcoder-dev",
										"com"
									],
									"path": [
										"v5",
										"users"
									],
									"query": [
										{
											"key": "perPage",
											"value": "20"
										}
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create job #1 \"sourcing\"",
					"item": [
						{
							"name": "create job #1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJobId1\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"0\",\n  \"description\": \"taas-demo-job1\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"weekly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"ee4c50c1-c8c3-475e-b6b6-edbd136a19d6\",\n    \"89139c80-d0a2-47c2-aa16-14589d5afd10\",\n    \"9f2d9127-6a2e-4506-ad76-c4ab63577b09\",\n    \"9515e7ee-83b6-49d1-ba5c-6c59c5a8ef1b\",\n    \"c854ab55-5922-4be1-8ecc-b3bc1f8629af\",\n    \"8456002e-fa2d-44f0-b0e7-86b1c02b6e4c\",\n    \"114b4ec8-805e-4c60-b351-14a955a991a9\",\n    \"213408aa-f16f-46c8-bc57-9e569cee3f11\",\n    \"b37a48db-f775-4e4e-b403-8ad1d234cdea\",\n    \"99b930b5-1b91-4df1-8b17-d9307107bb51\",\n    \"6388a632-c3ad-4525-9a73-66a527c03672\",\n    \"23839f38-6f19-4de9-9d28-f020056bca73\",\n    \"289e42a3-23e9-49be-88e1-6deb93cd8c31\",\n    \"b403f209-63b5-42bc-9b5f-1564416640d8\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create job #2 \"in-review\"",
					"item": [
						{
							"name": "create job #2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJobId2\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"0\",\n  \"description\": \"taas-demo-job2\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 7,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"weekly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"213408aa-f16f-46c8-bc57-9e569cee3f11\",\n    \"b37a48db-f775-4e4e-b403-8ad1d234cdea\",\n    \"99b930b5-1b91-4df1-8b17-d9307107bb51\",\n    \"6388a632-c3ad-4525-9a73-66a527c03672\",\n    \"23839f38-6f19-4de9-9d28-f020056bca73\",\n    \"289e42a3-23e9-49be-88e1-6deb93cd8c31\",\n    \"b403f209-63b5-42bc-9b5f-1564416640d8\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 1",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob1candidateId1\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId1}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 2",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob1candidateId2\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId2}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId3}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId4}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId5}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 6",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId6}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 7",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId7}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 8",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId8}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 9",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId9}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #2 candidate 10",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId2}}\",\r\n  \"userId\": \"{{demoUserId10}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job #2 candidate 1 to \"shortlist\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"shortlist\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates/{{demoJob1candidateId1}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates",
										"{{demoJob1candidateId1}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job #2 candidate 2 to \"rejected\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"rejected\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates/{{demoJob1candidateId2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates",
										"{{demoJob1candidateId2}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job #2 status to \"in-review\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"in-review\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs/{{demoJobId2}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs",
										"{{demoJobId2}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create job #3 \"assigned\"",
					"item": [
						{
							"name": "create job #3",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJobId3\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"0\",\n  \"description\": \"taas-demo-job3\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 7,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"weekly\",\n  \"workload\": \"full-time\",\n  \"skills\": [],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId11}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId12}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId13}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId14}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId15}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 16",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId16}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 17",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId17}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 18",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId18}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 19",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId19}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job #3 candidate 20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful POST request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"userId\": \"{{demoUserId20}}\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobCandidates",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobCandidates"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 11",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId11\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId11}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 1000,\r\n  \"customerRate\": 1200,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 12",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId12\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId12}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 1000,\r\n  \"customerRate\": 1200,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 13",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId13\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId13}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 1000,\r\n  \"customerRate\": 1200,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 14",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId14\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId14}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 1000,\r\n  \"customerRate\": 1200,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 15",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId15\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId15}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 1000,\r\n  \"customerRate\": 1200,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 16",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId16\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId16}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 800,\r\n  \"customerRate\": 1000,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 17",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId17\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId17}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"{{resourceStartDate}}\",\r\n  \"endDate\": \"{{resourceEndDate}}\",\r\n  \"memberRate\": 2000,\r\n  \"customerRate\": 2500,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 18",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId18\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId18}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"2000-07-27T04:17:23.131Z\",\r\n  \"endDate\": \"2000-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 3000,\r\n  \"customerRate\": 3500,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 19",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId19\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId19}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"2022-07-27T04:17:23.131Z\",\r\n  \"endDate\": \"2022-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 1700,\r\n  \"customerRate\": 1900,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "create job 3 resource booking 20",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJob3resourceCandiateId20\",data.id);"
										],
										"type": "text/javascript"
									}
								},
								{
									"listen": "prerequest",
									"script": {
										"exec": [
											"const startDate = new Date()",
											"startDate.setDate(startDate.getDate() - 3);",
											"",
											"const endDate = new Date()",
											"endDate.setDate(endDate.getDate() + 3);",
											"",
											"postman.setEnvironmentVariable(\"resourceStartDate\", startDate.toUTCString());",
											"postman.setEnvironmentVariable(\"resourceEndDate\", endDate.toUTCString());"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"{{demoUserId20}}\",\r\n  \"jobId\": \"{{demoJobId3}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 0,\r\n  \"customerRate\": 0,\r\n  \"rateType\": \"weekly\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 11 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId11}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId11}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 12 status to \"in-review\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"in-review\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId12}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId12}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 13 status to \"closed\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"closed\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId13}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId13}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 14 status to \"cancelled\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"cancelled\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId14}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId14}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 15 status to \"sourcing\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"sourcing\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId15}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId15}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 16 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId16}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId16}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 17 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId17}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId17}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 18 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId18}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId18}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 19 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId19}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId19}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job 3 resource booking 20 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/resourceBookings/{{demoJob3resourceCandiateId20}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"resourceBookings",
										"{{demoJob3resourceCandiateId20}}"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job #3 status to \"assigned\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"assigned\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs/{{demoJobId3}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs",
										"{{demoJobId3}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create job #4 \"closed\"",
					"item": [
						{
							"name": "create job #4",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJobId4\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"0\",\n  \"description\": \"taas-demo-job4\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 7,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"weekly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"8456002e-fa2d-44f0-b0e7-86b1c02b6e4c\",\n    \"114b4ec8-805e-4c60-b351-14a955a991a9\",\n    \"213408aa-f16f-46c8-bc57-9e569cee3f11\",\n    \"b37a48db-f775-4e4e-b403-8ad1d234cdea\",\n    \"99b930b5-1b91-4df1-8b17-d9307107bb51\",\n    \"6388a632-c3ad-4525-9a73-66a527c03672\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job #4 status to \"closed\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"closed\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs/{{demoJobId4}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs",
										"{{demoJobId4}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create job #5 \"cancelled\"",
					"item": [
						{
							"name": "create job #5",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"var data = JSON.parse(responseBody);\r",
											"\r",
											"pm.test(\"Successful POST request\", function () {\r",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);\r",
											"});\r",
											"\r",
											"postman.setEnvironmentVariable(\"demoJobId5\",data.id);"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"0\",\n  \"description\": \"taas-demo-job5\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 7,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"weekly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"b37a48db-f775-4e4e-b403-8ad1d234cdea\",\n    \"99b930b5-1b91-4df1-8b17-d9307107bb51\",\n    \"6388a632-c3ad-4525-9a73-66a527c03672\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs"
									]
								}
							},
							"response": []
						},
						{
							"name": "update job #5 status to \"cancelled\"",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"pm.test(\"Successful PATCH request\", function () {",
											"    pm.expect(pm.response.code).to.be.oneOf([200, 201, 202]);",
											"});"
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "PATCH",
								"header": [
									{
										"key": "Authorization",
										"type": "text",
										"value": "Bearer {{token_bookingManager}}"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\r\n  \"status\": \"cancelled\"\r\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{URL}}/jobs/{{demoJobId5}}",
									"host": [
										"{{URL}}"
									],
									"path": [
										"jobs",
										"{{demoJobId5}}"
									]
								}
							},
							"response": []
						}
					]
				}
			]
		},
		{
			"name": "Test Permission Rules",
			"item": [
				{
					"name": "Request with Administrator Role",
					"item": [
						{
							"name": "Jobs",
							"item": [
								{
									"name": "✔ create job with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"job_id_created_by_administrator\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_administrator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get job with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search jobs with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobs",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs"
											],
											"query": [
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "3",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "1212",
													"disabled": true
												},
												{
													"key": "description",
													"value": "Dummy",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "resourceType",
													"value": "Dummy Resource Type",
													"disabled": true
												},
												{
													"key": "skill",
													"value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
													"disabled": true
												},
												{
													"key": "rateType",
													"value": "hourly",
													"disabled": true
												},
												{
													"key": "status",
													"value": "sourcing",
													"disabled": true
												},
												{
													"key": "workload",
													"value": "full-time",
													"disabled": true
												},
												{
													"key": "title",
													"value": "dummy",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put job with administrator",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch job with administrator",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ delete job with administrator",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Job Candidates",
							"item": [
								{
									"name": "✔ create job candidate with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"job_candidate_id_created_by_administrator\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get job candidate with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search job candidates with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "1",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"disabled": true
												},
												{
													"key": "jobId",
													"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
													"disabled": true
												},
												{
													"key": "userId",
													"value": "a55fe1bc-1754-45fa-9adc-cf3d6d7c377a",
													"disabled": true
												},
												{
													"key": "status",
													"value": "shortlist",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put job candidate with administrator",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"status\": \"selected\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch job candidate with administrator",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": \"shortlist\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ delete job candidate with administrator",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Interviews",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_id_created_by_administrator\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_administrator}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"88774632\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobs",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"response": []
										},
										{
											"name": "create job candidate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_candidate_id_created_by_administrator\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"userId\": \"95e7970f-12b4-43b7-ab35-38c34bf033c7\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobCandidates",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobCandidates"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✔ request interview with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    if(pm.response.status === \"OK\"){\r",
													"        const response = pm.response.json()\r",
													"        pm.environment.set(\"interview_round_created_by_administrator\", response.round);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_administrator}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"googleCalendarId\": \"dummyId\",\r\n    \"customMessage\": \"This is a custom message\",\r\n    \"status\": \"Requested\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}/requestInterview",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}",
												"requestInterview"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get interview with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_administrator}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}/interviews/{{interview_round_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}",
												"interviews",
												"{{interview_round_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search interviews with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_administrator}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_by_administrator}}/interviews",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_by_administrator}}",
												"interviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Resource Bookings",
							"item": [
								{
									"name": "✔ create resource booking with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"resource_bookings_id_created_by_administrator\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get resource booking with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_bookings_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_bookings_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search resource bookings with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/resourceBookings",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "desc",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "rateType",
													"value": "hourly",
													"disabled": true
												},
												{
													"key": "status",
													"value": "sourcing",
													"disabled": true
												},
												{
													"key": "projectIds",
													"value": "111, 16705",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put resource booking with administrator",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_bookings_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_bookings_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch resource booking with administrator",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_bookings_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_bookings_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ delete resource booking with administrator",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_bookings_id_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_bookings_id_created_by_administrator}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Work Periods",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "✔ create job with administrator",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"job_id_created_by_administrator\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_administrator}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobs",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"response": []
										},
										{
											"name": "✔ create resource booking with administrator",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"resource_bookings_id_created_by_administrator\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": {{projectId}},\r\n  \"userId\": \"a55fe1bc-1754-45fa-9adc-cf3d6d7c377a\",\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/resourceBookings",
													"host": [
														"{{URL}}"
													],
													"path": [
														"resourceBookings"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✔ create work period with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    if(pm.response.status === \"OK\"){\r",
													"        const response = pm.response.json()\r",
													"        pm.environment.set(\"workPeriodId_created_by_administrator\", response.id);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_bookings_id_created_by_administrator}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get work period with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search work periods with administrator",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"url": {
											"raw": "{{URL}}/workPeriods",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "desc",
													"disabled": true
												},
												{
													"key": "resourceBookingId",
													"value": "{{resource_bookings_id_created_by_administrator}}",
													"disabled": true
												},
												{
													"key": "resourceBookingIds",
													"value": "{{resource_bookings_id_created_by_administrator}},{{resource_bookings_id_created_by_administrator}}",
													"disabled": true
												},
												{
													"key": "paymentStatus",
													"value": "pending",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2021-03-07",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2021-03-13",
													"disabled": true
												},
												{
													"key": "userHandle",
													"value": "pshah_manager",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "111",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put work period with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_bookings_id_created_by_administrator}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch work period with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_bookings_id_created_by_administrator}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_by_administrator}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ delete work period with administrator",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 204', function () {\r",
													"    pm.response.to.have.status(204);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_administrator}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_by_administrator}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_by_administrator}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Request with Topcoder User Role",
					"item": [
						{
							"name": "README",
							"item": [
								{
									"name": "[STUB] all operations cause 403 error if user is not member of project",
									"request": {
										"method": "LOCK",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Jobs",
							"item": [
								{
									"name": "✔ create job with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"job_id_created_by_member\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_member_tester1234}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": {{project_id_16718}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get job with member",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search jobs with member filtering by \"projectId\"",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobs?projectId={{project_id_16718}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs"
											],
											"query": [
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "3",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "{{project_id_16718}}"
												},
												{
													"key": "externalId",
													"value": "1212",
													"disabled": true
												},
												{
													"key": "description",
													"value": "Dummy",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "resourceType",
													"value": "Dummy Resource Type",
													"disabled": true
												},
												{
													"key": "skill",
													"value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
													"disabled": true
												},
												{
													"key": "rateType",
													"value": "hourly",
													"disabled": true
												},
												{
													"key": "status",
													"value": "sourcing",
													"disabled": true
												},
												{
													"key": "workload",
													"value": "full-time",
													"disabled": true
												},
												{
													"key": "title",
													"value": "dummy",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put job with member",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": {{project_id_16718}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch job with member",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete job with member",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_member}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Job Candidates",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job candidate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_candidate_id_created_for_member\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobCandidates",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobCandidates"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✘ create job candidate with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"job_candidate_id_created_by_member\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get job candidate with member",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search job candidates with member filtering  by \"jobId\"",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates?jobId={{job_id_created_by_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "1",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"disabled": true
												},
												{
													"key": "jobId",
													"value": "{{job_id_created_by_member}}"
												},
												{
													"key": "userId",
													"value": "fe38eed1-af73-41fd-85a2-ac4da1ff09a3",
													"disabled": true
												},
												{
													"key": "status",
													"value": "shortlist",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put job candidate with member",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"status\": \"selected\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch job candidate with member",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": \"shortlist\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete job candidate with member",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Interviews",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_id_created_for_member\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_administrator}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"88774632\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobs",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"response": []
										},
										{
											"name": "create job candidate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_candidate_id_created_for_member\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"userId\": \"95e7970f-12b4-43b7-ab35-38c34bf033c7\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobCandidates",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobCandidates"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✔ request interview with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    if(pm.response.status === \"OK\"){\r",
													"        const response = pm.response.json()\r",
													"        pm.environment.set(\"interview_round_created_by_member\", response.round);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_member}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"googleCalendarId\": \"dummyId\",\r\n    \"customMessage\": \"This is a custom message\",\r\n    \"status\": \"Requested\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}/requestInterview",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}",
												"requestInterview"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get interview with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_member}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}/interviews/{{interview_round_created_by_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}",
												"interviews",
												"{{interview_round_created_by_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search interviews with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_member}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_member}}/interviews",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_member}}",
												"interviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Resource Bookings",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create resource booking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"resource_booking_id_created_for_member\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": {{project_id_16718}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/resourceBookings",
													"host": [
														"{{URL}}"
													],
													"path": [
														"resourceBookings"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✘ create resource booking with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"resource_booking_id_created_by_member\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": {{project_id_16718}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get resource booking with member",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search resource bookings with member filtering  by \"projectId\"",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/resourceBookings?projectId={{project_id_16718}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "desc",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "rateType",
													"value": "hourly",
													"disabled": true
												},
												{
													"key": "status",
													"value": "sourcing",
													"disabled": true
												},
												{
													"key": "projectIds",
													"value": "111, 16705",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "{{project_id_16718}}"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ put resource booking with member",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": {{project_id_16718}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ patch resource booking with member",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete resource booking with member",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_member}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Work Periods",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"job_id_created_by_member\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_member_tester1234}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": {{project_id_16718}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobs",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"response": []
										},
										{
											"name": "create resource booking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"resource_booking_id_created_for_member\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": {{project_id_16718}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_member}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/resourceBookings",
													"host": [
														"{{URL}}"
													],
													"path": [
														"resourceBookings"
													]
												}
											},
											"response": []
										},
										{
											"name": "create work period",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"workPeriodId_created_for_member\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_member}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/workPeriods",
													"host": [
														"{{URL}}"
													],
													"path": [
														"workPeriods"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✘ create work period with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_member}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get work period with member",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search work periods with member",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"url": {
											"raw": "{{URL}}/workPeriods?projectId=16718",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "desc",
													"disabled": true
												},
												{
													"key": "resourceBookingId",
													"value": "{{resource_booking_id_created_for_member}}",
													"disabled": true
												},
												{
													"key": "resourceBookingIds",
													"value": "{{resource_booking_id_created_for_member}},{{resource_booking_id_created_for_member}}",
													"disabled": true
												},
												{
													"key": "paymentStatus",
													"value": "pending",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2021-03-07",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2021-03-13",
													"disabled": true
												},
												{
													"key": "userHandle",
													"value": "pshah_manager",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "16718"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ put work period with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_member}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ patch work period with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_member}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_member}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete work period with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_member_tester1234}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_member}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_member}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				},
				{
					"name": "Request with Connect Manager Role",
					"item": [
						{
							"name": "README",
							"item": [
								{
									"name": "[STUB] all operations except get/search cause 403 error if manager is not member of project",
									"request": {
										"method": "LOCK",
										"header": [],
										"url": {
											"raw": ""
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Jobs",
							"item": [
								{
									"name": "✔ create job with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"job_id_created_by_connect_manager\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": {{project_id_16843}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get job with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search jobs with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobs",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs"
											],
											"query": [
												{
													"key": "page",
													"value": "0",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "3",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "21",
													"disabled": true
												},
												{
													"key": "externalId",
													"value": "1212",
													"disabled": true
												},
												{
													"key": "description",
													"value": "Dummy",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "resourceType",
													"value": "Dummy Resource Type",
													"disabled": true
												},
												{
													"key": "skill",
													"value": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
													"disabled": true
												},
												{
													"key": "rateType",
													"value": "hourly",
													"disabled": true
												},
												{
													"key": "status",
													"value": "sourcing",
													"disabled": true
												},
												{
													"key": "workload",
													"value": "full-time",
													"disabled": true
												},
												{
													"key": "title",
													"value": "dummy",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put job with connect manager",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"projectId\": {{project_id_16843}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch job with connect manager",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"fractional\",\n  \"skills\": [\n    \"cbac57a3-7180-4316-8769-73af64893158\"\n  ],\n  \"status\": \"sourcing\",\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete job with connect manager",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobs/{{job_id_created_by_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobs",
												"{{job_id_created_by_connect_manager}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Job Candidates",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job candidate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_candidate_id_created_for_connect_manager\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobCandidates",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobCandidates"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✘ create job candidate with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"job_candidate_id_created_by_connect_manager\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get job candidate with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search job candidates with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "1",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "asc",
													"disabled": true
												},
												{
													"key": "jobId",
													"value": "46225f4c-c2a3-4603-a141-0277e96fabfa",
													"disabled": true
												},
												{
													"key": "userId",
													"value": "fe38eed1-af73-41fd-85a2-ac4da1ff09a3",
													"disabled": true
												},
												{
													"key": "status",
													"value": "shortlist",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ put job candidate with connect manager",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"status\": \"selected\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ patch job candidate with connect manager",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": \"shortlist\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete job candidate with connect manager",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Interviews",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_id_created_for_connect_manager\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_administrator}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": {{projectId}},\n  \"externalId\": \"88774632\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobs",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"response": []
										},
										{
											"name": "create job candidate",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"job_candidate_id_created_for_connect_manager\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"jobId\": \"{{job_id_created_by_administrator}}\",\r\n  \"userId\": \"95e7970f-12b4-43b7-ab35-38c34bf033c7\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobCandidates",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobCandidates"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✔ request interview with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"    if(pm.response.status === \"OK\"){\r",
													"        const response = pm.response.json()\r",
													"        pm.environment.set(\"interview_round_created_by_connect_manager\", response.round);\r",
													"    }\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}",
												"type": "text"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"xaiTemplate\": \"30-min-interview\",\r\n    \"googleCalendarId\": \"dummyId\",\r\n    \"customMessage\": \"This is a custom message\",\r\n    \"status\": \"Requested\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}/requestInterview",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}",
												"requestInterview"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get interview with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}/interviews/{{interview_round_created_by_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}",
												"interviews",
												"{{interview_round_created_by_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search interviews with member",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 200', function () {\r",
													"    pm.response.to.have.status(200);\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}",
												"type": "text"
											}
										],
										"url": {
											"raw": "{{URL}}/jobCandidates/{{job_candidate_id_created_for_connect_manager}}/interviews",
											"host": [
												"{{URL}}"
											],
											"path": [
												"jobCandidates",
												"{{job_candidate_id_created_for_connect_manager}}",
												"interviews"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Resource Bookings",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create resource booking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"var data = JSON.parse(responseBody);\r",
															"postman.setEnvironmentVariable(\"resource_booking_id_created_for_connect_manager\",data.id);"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": {{project_id_16843}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/resourceBookings",
													"host": [
														"{{URL}}"
													],
													"path": [
														"resourceBookings"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✘ create resource booking with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"var data = JSON.parse(responseBody);\r",
													"postman.setEnvironmentVariable(\"resource_booking_id_created_by_connect_manager\",data.id);"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": {{project_id_16843}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get resource booking with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search resource bookings with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/resourceBookings",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "desc",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2020-09-27T04:17:23.131Z",
													"disabled": true
												},
												{
													"key": "rateType",
													"value": "hourly",
													"disabled": true
												},
												{
													"key": "status",
													"value": "sourcing",
													"disabled": true
												},
												{
													"key": "projectIds",
													"value": "111, 16705",
													"disabled": true
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ put resource booking with connect manager",
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"projectId\": {{project_id_16843}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\",\r\n  \"status\": \"assigned\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ patch resource booking with connect manager",
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n  \"status\": \"assigned\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete resource booking with connect manager",
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/resourceBookings/{{resource_booking_id_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"resourceBookings",
												"{{resource_booking_id_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								}
							]
						},
						{
							"name": "Work Periods",
							"item": [
								{
									"name": "Before Test",
									"item": [
										{
											"name": "create job",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"job_id_created_by_connect_manager\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"value": "Bearer {{token_administrator}}",
														"type": "text"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\n  \"projectId\": {{project_id_16843}},\n  \"externalId\": \"1212\",\n  \"description\": \"Dummy Description\",\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\n  \"duration\": 1,\n  \"numPositions\": 13,\n  \"resourceType\": \"Dummy Resource Type\",\n  \"rateType\": \"hourly\",\n  \"workload\": \"full-time\",\n  \"skills\": [\n    \"23e00d92-207a-4b5b-b3c9-4c5662644941\",\n    \"7d076384-ccf6-4e43-a45d-1b24b1e624aa\",\n    \"cbac57a3-7180-4316-8769-73af64893158\",\n    \"a2b4bc11-c641-4a19-9eb7-33980378f82e\"\n  ],\n  \"title\": \"Dummy title - at most 64 characters\"\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/jobs",
													"host": [
														"{{URL}}"
													],
													"path": [
														"jobs"
													]
												}
											},
											"response": []
										},
										{
											"name": "create resource booking",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"resource_booking_id_created_for_connect_manager\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n  \"projectId\": {{project_id_16843}},\r\n  \"userId\": \"fe38eed1-af73-41fd-85a2-ac4da1ff09a3\",\r\n  \"jobId\": \"{{job_id_created_by_connect_manager}}\",\r\n  \"startDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"endDate\": \"2020-09-27T04:17:23.131Z\",\r\n  \"memberRate\": 13.23,\r\n  \"customerRate\": 13,\r\n  \"rateType\": \"hourly\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/resourceBookings",
													"host": [
														"{{URL}}"
													],
													"path": [
														"resourceBookings"
													]
												}
											},
											"response": []
										},
										{
											"name": "create work period",
											"event": [
												{
													"listen": "test",
													"script": {
														"exec": [
															"pm.test('Status code is 200', function () {\r",
															"    pm.response.to.have.status(200);\r",
															"    if(pm.response.status === \"OK\"){\r",
															"        const response = pm.response.json()\r",
															"        pm.environment.set(\"workPeriodId_created_for_connect_manager\", response.id);\r",
															"    }\r",
															"});"
														],
														"type": "text/javascript"
													}
												}
											],
											"request": {
												"method": "POST",
												"header": [
													{
														"key": "Authorization",
														"type": "text",
														"value": "Bearer {{token_administrator}}"
													}
												],
												"body": {
													"mode": "raw",
													"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_connect_manager}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
													"options": {
														"raw": {
															"language": "json"
														}
													}
												},
												"url": {
													"raw": "{{URL}}/workPeriods",
													"host": [
														"{{URL}}"
													],
													"path": [
														"workPeriods"
													]
												}
											},
											"response": []
										}
									]
								},
								{
									"name": "✘ create work period with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "POST",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_connect_manager}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ get work period with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✔ search work periods with connect manager",
									"request": {
										"method": "GET",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"url": {
											"raw": "{{URL}}/workPeriods?projectId=16843",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods"
											],
											"query": [
												{
													"key": "page",
													"value": "1",
													"disabled": true
												},
												{
													"key": "perPage",
													"value": "5",
													"disabled": true
												},
												{
													"key": "sortBy",
													"value": "id",
													"disabled": true
												},
												{
													"key": "sortOrder",
													"value": "desc",
													"disabled": true
												},
												{
													"key": "resourceBookingId",
													"value": "{{resource_booking_id_created_for_connect_manager}}",
													"disabled": true
												},
												{
													"key": "resourceBookingIds",
													"value": "{{resource_booking_id_created_for_connect_manager}},{{resource_booking_id_created_for_connect_manager}}",
													"disabled": true
												},
												{
													"key": "paymentStatus",
													"value": "pending",
													"disabled": true
												},
												{
													"key": "startDate",
													"value": "2021-03-07",
													"disabled": true
												},
												{
													"key": "endDate",
													"value": "2021-03-13",
													"disabled": true
												},
												{
													"key": "userHandle",
													"value": "pshah_manager",
													"disabled": true
												},
												{
													"key": "projectId",
													"value": "16843"
												}
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ put work period with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PUT",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_connect_manager}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ patch work period with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "PATCH",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "{\r\n    \"resourceBookingId\": \"{{resource_booking_id_created_for_connect_manager}}\",\r\n    \"startDate\": \"2021-03-07\",\r\n    \"endDate\": \"2021-03-13\",\r\n    \"daysWorked\": 2,\r\n    \"memberRate\": 13.13,\r\n    \"customerRate\": 13.13,\r\n    \"paymentStatus\": \"pending\"\r\n}",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								},
								{
									"name": "✘ delete work period with connect manager",
									"event": [
										{
											"listen": "test",
											"script": {
												"exec": [
													"pm.test('Status code is 403', function () {\r",
													"    pm.response.to.have.status(403);\r",
													"    const response = pm.response.json()\r",
													"    pm.expect(response.message).to.eq(\"You are not allowed to perform this action!\")\r",
													"});"
												],
												"type": "text/javascript"
											}
										}
									],
									"request": {
										"method": "DELETE",
										"header": [
											{
												"key": "Authorization",
												"type": "text",
												"value": "Bearer {{token_connect_manager_pshahcopmanag2}}"
											}
										],
										"body": {
											"mode": "raw",
											"raw": "",
											"options": {
												"raw": {
													"language": "json"
												}
											}
										},
										"url": {
											"raw": "{{URL}}/workPeriods/{{workPeriodId_created_for_connect_manager}}",
											"host": [
												"{{URL}}"
											],
											"path": [
												"workPeriods",
												"{{workPeriodId_created_for_connect_manager}}"
											]
										}
									},
									"response": []
								}
							]
						}
					]
				}
			]
		}
	]
}